use juniper::{graphql_object, FieldResult, GraphQLInputObject};
use trustify_common::db::Transactional;

use crate::schemas::root::Context;

use super::advisory::Advisory;

/// Vulnerability
#[derive(Default, Debug)]
pub struct Vulnerability {
    pub id: i32,
    pub identifier: String,
    pub title: String,
    pub advisories: Vec<Advisory>,
}

#[derive(GraphQLInputObject)]
#[graphql(description = "Vulnerability Input")]
pub struct VulnerabilityInput {
    pub identifier: String,
    pub title: String,
}

#[graphql_object(Context = Context)]
impl Vulnerability {
    fn id(&self) -> i32 {
        self.id
    }
    fn identifier(&self) -> &str {
        &self.identifier
    }
    fn title(&self) -> &str {
        &self.title
    }
    async fn advisories(&self, context: &Context) -> FieldResult<Vec<Advisory>> {
        let loaded_advisories = context
            .graph
            .get_advisory_by_id(self.id, Transactional::None)
            .await;
        Ok(Vec::new())
    }
}
